{% set SERVER_IMAGE = properties['image'] or 'gcr.io/oscon-tf-workshop/tf-worker:latest' %}
{% set NAMESPACE = properties['namespace'] or 'default' %}
kind: ConfigMap
apiVersion: v1
metadata:
    name: tensorflow-cluster-config
    namespace: {{ NAMESPACE }}
data:
    clusterconfig: >
        {
            {% for job in properties['jobs'] %}
            "{{ job['name'] }}": [
                {% for i in range(job['num_tasks']) %}
                "{{ job['name'] }}-{{ i }}.{{ NAMESPACE }}.svc.cluster.local:{{ job['port'] or 8080 }}",
                {% endfor %}
            ],
            {% endfor %}
        }
---
{% for job in properties['jobs'] %}
{% for i in range(job['num_tasks']) %}
kind: Service
apiVersion: v1
metadata:
  name: {{ job['name'] }}-{{ i }}
  namespace: {{ NAMESPACE }}
spec:
  ports:
    - port: {{ job['port'] or 8080 }}
      name: grpc-server
  selector:
    job: {{ job['name'] }}
    task: '{{ i }}'
---
kind: ReplicationController
apiVersion: v1
metadata:
  name: {{ job['name'] }}-{{ i }}
  namespace: {{ NAMESPACE }}
spec:
  replicas: 1
  selector:
    job: {{ job['name'] }}
    task: '{{ i }}'
  template:
    metadata:
      labels:
        job: {{ job['name'] }}
        task: '{{ i }}'
    spec:
      containers:
        - name: tf-grpc-server
          image: {{ SERVER_IMAGE }}
          ports:
            - name: grpc-server
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                  fieldRef:
                      fieldPath: metadata.name
            - name: CLUSTER_CONFIG
              valueFrom:
                  configMapKeyRef:
                      name: tensorflow-cluster-config
                      key: clusterconfig
{% if job['name'] == 'jupyter' %}
          volumeMounts:
            - name: tensorflow-logs
              mountPath: /var/log/tensorflow
        - name: jupyter-server
          image: gcr.io/oscon-tf-workshop/jupyter-server
          ports:
            - name: jupyter
              containerPort: 8888
          env:
            - name: PASSWORD
              value: {{ job['password'] }}
            - name: CLUSTER_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: tensorflow-cluster-config
                  key: clusterconfig
          volumeMounts:
            - name: tensorflow-logs
              mountPath: /var/log/tensorflow
              readOnly: true
            - name: notebooks
              mountPath: /notebooks
        - name: tensorboard-server
          image: gcr.io/tensorflow/tensorflow:latest-devel
          ports:
            - name: tensorboard
              containerPort: 6006
          command:
            - /tensorflow/bazel-bin/tensorflow/tensorboard/tensorboard
            - --logdir=/var/log/tensorflow
          volumeMounts:
            - name: tensorflow-logs
              mountPath: /var/log/tensorflow
              readOnly: true
      volumes:
        - name: tensorflow-logs
          gcePersistentDisk:
            pdName: tensorflow-logs
        - name: notebooks
          gcePersistentDisk:
            pdName: notebooks
---
kind: Service
apiVersion: v1
metadata:
  name: jupyter-external
  namespace: {{ NAMESPACE }}
spec:
  type: LoadBalancer
  ports:
    - name: jupyter
      port: 8888
    - name: tensorboard
      port: 6006
  selector:
    job: {{ job['name'] }}
    task: '{{ i }}'
{% endif %}
---
{% endfor %}
{% endfor %}
